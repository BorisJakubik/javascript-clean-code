{
  "name": "javascript-clean-code",
  "version": "1.0.0",
  "description": "We are going to establish some basic rules of clean code, what to follow and what indicates bad practice.  Many of the examples we will show are perfectly valid code and the reason why we consider it bad practice is not the  code itself but the bigger picture. We are software engineers developing robust applications which need to be future  proof so while a solutions is perfectly good for showcasing in 1 testing file, it may not be acceptable  within a real project.",
  "main": "index.js",
  "scripts": {
    "flow": "flow",
    "test": "jest --coverage",
    "browserify": "browserify build/index.js -o build/bundle.js",
    "build": "babel lib -d build && npm run browserify",
    "build:watch": "watch \"npm run build \" lib",
    "lint": "eslint lib/**; exit 0",
    "lint:watch": "esw -w lib/**",
    "prepublish": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JuliusKoronci/javascript-clean-code.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/JuliusKoronci/javascript-clean-code/issues"
  },
  "homepage": "https://github.com/JuliusKoronci/javascript-clean-code#readme",
  "dependencies": {
    "ramda": "^0.24.1"
  },
  "devDependencies": {
    "browserify": "^14.4.0",
    "jest": "^20.0.4",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^7.2.3",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "eslint": "^4.5.0",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-react": "^7.3.0",
    "eslint-watch": "^3.1.2",
    "prop-types": "^15.5.10",
    "react": "^15.6.1",
    "react-dom": "^15.6.1",
    "watch": "^1.0.2"
  }
}
